--- util/rarian-sk-update.in.orig	2008-09-01 14:40:21.000000000 -0400
+++ util/rarian-sk-update.in	2014-02-18 14:54:52.000000000 -0500
@@ -1,4 +1,4 @@
-#!@BASH@
+#!/bin/sh
 
 # This script is designed to replace scrollkeeper-update
 # It iterates through all the directories specified using -o <dir_list>
@@ -25,7 +25,7 @@
 datadir=@datadir@
 output_dir=${datadir}/help
 package_version=@PACKAGE_VERSION@
-real_convert[0]=$convert_dir
+real_convert=$convert_dir
 skip_omf_translate=@ENABLE_OMF_READ@
 
 # Print the version info for this file
@@ -97,7 +97,7 @@
 	for f in $1/*.omf; do
 	    bname=$(basename $f)
 	    bname=${bname%-*.omf}
-		if [[ $bname != $old_basename ]]
+		if [ $bname != $old_basename ]
 		then
 			old_basename=$bname
 	    	filename=$bname.document
@@ -115,39 +115,22 @@
 	echo -e `stat -c %Y $1`':@:'$1':@:'$fname_list >> $tmpdir/rarian-updates
 }
 
-# Split up the omf dirs specified on the command line
-# I've never seen this used in practice, but
-# better safe than sorry
-split_omf_dirs ()
-{
-	let counter=0
-	while [ $convert_dir ]
-	do
-		entry=`echo $convert_dir | cut -d ':' -f 1`
-		convert_dir=${convert_dir#$entry}
-		convert_dir=${convert_dir#:}
-		real_convert[$counter]=$entry
-		let counter+=1
-	done
-
-}
-
 # Determine whether the directory defined within the index file
 # was specified in the convert_dirs
 am_adding_dir ()
 {
-	let counter=0
 	am_processing="0"
-	for i in ${real_convert[@]}
+	tmplist=
+	for i in ${real_convert}
 	do
-		if [[ $fname == $i ]]
+		if [ $fname == $i ]
 		then
-			real_convert[$counter]="0"
 			am_processing="1"
-			return
-		fi
-		let counter+=1
+		else
+			tmplist="$tmplist $i"
+		fi	
 	done
+	real_convert=$tmplist
 }
 
 # The directory wasn't specified.  This does nothing except cat the
@@ -156,7 +139,7 @@
 {
 	read line
 	time=`echo $line | awk -F ":@:" '{print $1}'`
-	while [[ $time -ne 0 ]]
+	while [ $time -ne 0 ]
 	do
 		echo $line
 		echo $line >> $tmpdir/rarian-updates
@@ -183,18 +166,18 @@
 # If the given directory actually exists within the omf dir
 dirs_contains ()
 {
-	let counter=0
 	am_processing="0"
-	for i in ${entries[@]}
+	tmplist=
+	for i in ${entries}
 	do
-		if [[ $1 == $i ]]
+		if [ $1 == $i ]
 		then
-			entries[$counter]="0"
 			am_processing="1"
-			return
+		else
+			tmplist="$tmplist $i"
 		fi
-		let counter+=1
 	done
+	entries=$tmplist
 }
 
 # The meat.  Goes through and checks each directory mtime against the
@@ -202,27 +185,26 @@
 # If the dir has been removed, delete.
 process_directory ()
 {
-	let counter=0
+	entries=
 	for i in  $(ls $fname)
 	do
-		entries[$counter]="$fname/$i"
-		let counter+=1
+		entries="$entries $fname/$i"
 	done
 
 	read line
 
 	old_time=`echo $line | awk -F ":@:" '{print $1}'`
 
-	while [[ $old_time && $old_time != "0" ]]
+	while [ $old_time && $old_time != "0" ]
 	do
 		name=`echo $line | awk -F ":@:" '{print $2}'`
 
 		dirs_contains $name
 
-		if [[ $am_processing != "0" ]]
+		if [ $am_processing != "0" ]
 		then
 			new_time=`stat -c %Y $name`
-			if [[ $new_time -ne $old_time ]]
+			if [ $new_time -ne $old_time ]
 			then
 				print_verbose "Directory $name has changed.  Updating."
 				process_dir $name
@@ -231,7 +213,7 @@
 			fi
 		else
 			filenames=`echo $line | awk -F ":@:" '{print $3}'`
-			while [[ $filenames ]]
+			while [ $filenames ]
 			do
 				entry=`echo $filenames | cut -d ';' -f 1`
 				print_verbose "Directory resonsible for $entry has been removed.  Deleting"
@@ -246,13 +228,10 @@
 		old_time=`echo $line | awk -F ":@:" '{print $1}'`
 	done
 
-	for i in ${entries[@]}
+	for i in ${entries}
 	do
-		if [[ $i != "0" ]]
-		then
-			print_verbose "Directory $i is new and will be added."
-			process_dir $i
-		fi
+		print_verbose "Directory $i is new and will be added."
+		process_dir $i
 	done
 }
 
@@ -326,7 +305,10 @@
 if [ $skip_omf_translate = 0 ]
 then
 
-split_omf_dirs
+# Split up the omf dirs specified on the command line
+# I've never seen this used in practice, but
+# better safe than sorry
+real_convert=$(echo $convert_dir | sed 's/:/ /g')
 
 if [ $update_output_dir ] && [ ! $overload_update ]
 then
@@ -334,7 +316,7 @@
     # omf files in <prefix>/share/omf
     # Also assumes only a single omf path
     print_verbose "Using non-installed location"
-    output_dir=`dirname $real_convert[0]`/help
+    output_dir=$(dirname $(echo $real_convert | cut -d ' ' -f 1))/help
 fi
 
 print_verbose "Outputting to $output_dir"
@@ -378,16 +360,16 @@
 fname=`echo $line | awk -F ":@:" '{print $2}'`
 
 
-while [[ $fname != "" ]]
+while [ $fname != "" ]
 do
 	print_verbose "Processing directory $fname"
 	echo "0:@:$fname" >> $tmpdir/rarian-updates
 	am_adding_dir $fname
-	if [[ ! $(ls $fname 2>&1) ]]
+	if [ ! $(ls $fname 2>&1) ]
 	then
 	    print_verbose "Previous directory $fname no longer exists"
 	else
-	    if [[ $am_processing != "0" ]]
+	    if [ $am_processing != "0" ]
 	    then
 		process_directory
 	    else
@@ -397,22 +379,18 @@
 	fi
 done
 
-for i in ${real_convert[@]}
+for i in ${real_convert}
 do
-    if [[ $i != "0" ]]
-    then
 	res=$(ls $i 2>/dev/null)
-	if [[ ! $res ]]
+	if [ ! $res ]
 	then
 	    print_verbose "Path $i does not exist.  Ignoring"
 	else
-	    
 	    print_verbose "Adding contents of directory $i"
 	    fname=$i
 	    echo "0:@:$fname" >> $tmpdir/rarian-updates
 	    add_all_files
 	fi
-    fi
 done
 
 rm -f $statedir/rarian-update-mtimes
@@ -422,4 +400,4 @@
 fi
 rm -rf $tmpdir
 
-fi # ENABLE_OMF_READ
\ No newline at end of file
+fi # ENABLE_OMF_READ
