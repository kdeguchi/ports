--- postgrey.orig	2016-11-15 07:38:24 UTC
+++ postgrey
@@ -24,8 +24,8 @@ use vars qw(@ISA);
 @ISA = qw(Net::Server::Multiplex);
 
 my $VERSION = '1.37';
-my $DEFAULT_DBDIR = '/var/spool/postfix/postgrey';
-my $CONFIG_DIR = '/etc/postfix';
+my $DEFAULT_DBDIR = '/var/db/postgrey';
+my $CONFIG_DIR = '/etc/postfix';
 
 sub read_clients_whitelists($)
 {
@@ -295,6 +295,22 @@ sub do_maintenance($$)
             $self->mylog(1, "cleaning clients database finished. before: $nr_keys_before, after: $nr_keys_after");
         }
 
+        if($self->{postgrey}{targrey}) {
+            # cleanup tarpit blacklist database
+            my $tarpit_db = $self->{postgrey}{db_tarpit};
+            ($nr_keys_before, $nr_keys_after) = (0, 0);
+            while (my ($key, $tarpit_last_seen) = each %$tarpit_db) {
+                $nr_keys_before++;
+                if($now - $tarpit_last_seen > $retry_window) {
+                    delete $tarpit_db->{$key};
+                }
+                else {
+                    $nr_keys_after++;
+                }
+            }
+            $self->mylog(1, "cleaning tarpit blacklist database finished. before: $nr_keys_before, after: $nr_keys_after");
+        }
+
         $self->{postgrey}{last_maint_keys}=$now;
     }
 }
@@ -383,7 +399,7 @@ sub smtpd_access_policy($$)
         # whitelist if count is enough
         if(defined $cawl_count and $cawl_count >= $self->{postgrey}{awl_clients})
         {
-            if(($now >= $cawl_last+3600) or ($cawl_last > $now)) {
+            if(($now >= $cawl_last + $self->{postgrey}{awl_delay}) or ($cawl_last > $now)) {
                 $cawl_count++; # for statistics
                 $cawl_db->{$cawl_key}=$cawl_count.','.$now;
             }
@@ -392,6 +408,28 @@ sub smtpd_access_policy($$)
         }
     }
 
+    # check tarpit passed if targrey mode
+    if ($self->{postgrey}{targrey} && $attr->{protocol_state} eq 'DATA') { # passed tarpit
+        # remove tarpit blacklist
+        my $tarpit_db = $self->{postgrey}{db_tarpit};
+        my $tarpit_key = $attr->{client_address};
+        delete $tarpit_db->{$tarpit_key};
+
+        # auto whitelist clients by tarpit
+        if ($self->{postgrey}{awl_clients}) {
+            # enough time has passed (record only one attempt per hour)
+            if (! defined $cawl_last or $now >= $cawl_last + $self->{postgrey}{awl_delay}) {
+                # ok, increase count
+                $cawl_count++;
+                $cawl_db->{$cawl_key}=$cawl_count.','.$now;
+                $self->mylog(1, "tarpit whitelisted: $attr->{client_name}"."[".$attr->{client_address}."]")
+                    if $cawl_count==$self->{postgrey}{awl_clients};
+            }
+        }
+
+        return 'DUNNO';
+    }
+
     # lookup
     my $sender = $self->do_sender_substitutions($attr->{sender});
     my ($client_net, $client_host) =
@@ -402,10 +440,11 @@ sub smtpd_access_policy($$)
     }
     my $val    = $db->{$key};
     my $first;
+    my $retry_count=0;
     my $last_was_successful=0;
     if(defined $val) {
         my $last;
-        ($first, $last) = split(/,/,$val);
+        ($first, $last, $retry_count) = split(/,/,$val);
         # find out if the last time was unsuccessful, so that we can add a header
         # to say how much had to be waited
         if($last - $first >= $self->{postgrey}{delay}) {
@@ -426,16 +465,19 @@ sub smtpd_access_policy($$)
         $first = $now;
     }
 
+    my $diff = $self->{postgrey}{delay} - ($now - $first);
+
+    # enough waited? -> increase retry_count
+    $retry_count++ if($diff <= 0);
+
     # update (put as last element stripped host-part if it was stripped)
     if(defined $client_host) {
-        $db->{$key}="$first,$now,$client_host";
+        $db->{$key}="$first,$now,$retry_count,$client_host";
     }
     else {
-        $db->{$key}="$first,$now";
+        $db->{$key}="$first,$now,$retry_count";
     }
 
-    my $diff = $self->{postgrey}{delay} - ($now - $first);
-
     # auto whitelist clients
     # algorithm:
     # - on successful entry in the greylist db of a triplet:
@@ -443,23 +485,41 @@ sub smtpd_access_policy($$)
     #   - client whitelisted already? -> update last-seen timestamp
     if($self->{postgrey}{awl_clients}) {
         # greylisting succeeded
-        if($diff <= 0 and !$last_was_successful) {
+        if($retry_count >= $self->{postgrey}{retry_count} and !$last_was_successful) {
             # enough time has passed (record only one attempt per hour)
-            if(! defined $cawl_last or $now >= $cawl_last + 3600) {
+            if(! defined $cawl_last or $now >= $cawl_last + $self->{postgrey}{awl_delay}) {
                 # ok, increase count
                 $cawl_count++;
                 $cawl_db->{$cawl_key}=$cawl_count.','.$now;
                 my $client = $attr->{client_name} ?
                     $attr->{client_name}.'['.$attr->{client_address_ip}->addr().']' :
                     $attr->{client_address_ip}->addr();
-                $self->mylog(1, "whitelisted: $client")
+                $self->mylog(1, "whitelisted: $attr->{client_name}"."[".$attr->{client_address}."]")
                     if $cawl_count==$self->{postgrey}{awl_clients};
             }
         }
     }
 
-    # not enough waited? -> greylist
-    if ($diff > 0 ) {
+    # not enough retry? -> greylist
+    if ($retry_count < $self->{postgrey}{retry_count}) {
+        if($self->{postgrey}{tarpit} && ! $self->{postgrey}{targrey}) {
+            # do tarpit and greylist if tarpit option only
+            # don't add message after greylist_action
+            return "SLEEP $self->{postgrey}{tarpit}, $self->{postgrey}{greylist_action}";
+        }
+        if($self->{postgrey}{targrey}) {
+            # do tarpit if targrey option
+            # add tarpit blacklist
+            my $tarpit_db = $self->{postgrey}{db_tarpit};
+            my $tarpit_key = $attr->{client_address};
+            my $tarpit_last = $tarpit_db->{$tarpit_key};
+            $tarpit_last = 0 unless (defined $tarpit_last);
+            $tarpit_db->{$tarpit_key} = "$now" if ($now >= $tarpit_last+300); # update if 5min ago
+
+            # return sleep if not tarpit blacklisted
+            return "SLEEP $self->{postgrey}{tarpit}" if ($tarpit_last == 0);
+            # greylist if tarpit blacklisted
+        }
         my $msg = $self->{postgrey}{greylist_text};
         # Workaround for an Exchange bug related to Greylisting:
         # use DSN 4.2.0 instead of the default 4.7.1. This works
@@ -514,6 +574,7 @@ sub main()
         'syslogfacility|syslog-facility|facility=s',
         'retry-window=s', 'greylist-action=s', 'greylist-text=s', 'privacy',
         'hostname=s', 'exim', 'listen-queue-size=i', 'x-greylist-header=s',
+        'tarpit:s', 'targrey', 'retry-count=i', 'auto-whitelist-delay=i',
     ) or exit(1);
     # note: lookup-by-subnet can be given for compatibility, but it is default
     # so do not do nothing with it...
@@ -599,7 +660,7 @@ sub main()
             proto            => $opt{inet} ? 'tcp' : 'unix',
             socketmode       => $opt{socketmode} || '0666',
             user             => $opt{user} || 'postgrey',
-            group            => $opt{group} || 'nogroup',
+            group            => $opt{group} || 'postgrey',
             dbdir            => $opt{dbdir} || $DEFAULT_DBDIR,
             setsid           => $opt{daemonize} ? 1 : undef,
             pid_file         => $opt{daemonize} ? $opt{pidfile} : undef,
@@ -621,7 +682,9 @@ sub main()
             awl_clients      => defined $opt{'auto-whitelist-clients'} ?
                 ($opt{'auto-whitelist-clients'} ne '' ?
                     $opt{'auto-whitelist-clients'} : 5) : 5,
+            awl_delay        => $opt{'auto-whitelist-delay'} || 3600,
             retry_window     => $retry_window,
+            retry_count      => $opt{'retry-count'} || 1,
             greylist_action  => $opt{'greylist-action'} || 'DEFER_IF_PERMIT',
             greylist_text    => $opt{'greylist-text'} || 'Greylisted, see http://postgrey.schweikert.ch/help/%r.html',
             whitelist_clients_files    => $opt{'whitelist-clients'} ||
@@ -633,6 +696,10 @@ sub main()
             hostname => defined $opt{hostname} ? $opt{hostname} : hostname,
             exim => defined $opt{'exim'},
             x_greylist_header  => $opt{'x-greylist-header'} || 'X-Greylist: delayed %t seconds by postgrey-%v at %h; %d',
+            tarpit           => defined $opt{'tarpit'} ?
+                ($opt{'tarpit'} ne '' ?
+                    $opt{'tarpit'} : 65) : undef,
+            targrey          => defined $opt{'targrey'},
         },
     }, 'postgrey';
 
@@ -654,6 +721,11 @@ sub main()
         require Digest::SHA;
     }
 
+    # --targrey needs tarpit sec
+    if(defined $opt{'targrey'} && ! defined $opt{'tarpit'}) {
+        $server->{postgrey}{tarpit} = 125;
+    }
+
     $0 = join(' ', @{$server->{server}{commandline}});
     $server->run;
 
@@ -726,6 +798,13 @@ sub pre_loop_hook()
             -Env      => $self->{postgrey}{db_env}
         ) or die "ERROR: can't create database $self->{server}{dbdir}/postgrey_clients.db: $!\n";
     }
+    if($self->{postgrey}{targrey}) { # use targrey
+        tie(%{$self->{postgrey}{db_tarpit}}, 'BerkeleyDB::Btree',
+            -Filename => 'tarpit_clients.db',
+            -Flags    => DB_CREATE,
+            -Env      => $self->{postgrey}{db_env}
+           ) or die "ERROR: can't create database $self->{server}{dbdir}/tarpit_clients.db: $!\n";
+    }
 }
 
 sub mux_input()
@@ -811,8 +890,8 @@ B<postgrey> [I<options>...]
  -d, --daemonize         run in the background
      --pidfile=PATH      put daemon pid into this file
      --user=USER         run as USER (default: postgrey)
-     --group=GROUP       run as group GROUP (default: nogroup)
-     --dbdir=PATH        put db files in PATH (default: /var/spool/postfix/postgrey)
+     --group=GROUP       run as group GROUP (default: postgrey)
+     --dbdir=PATH        put db files in PATH (default: /var/db/postgrey)
      --delay=N           greylist for N seconds (default: 300)
      --max-age=N         delete entries older than N days since the last time
                          that they have been seen (default: 35)
@@ -828,8 +907,8 @@ B<postgrey> [I<options>...]
      --privacy           store data using one-way hash functions
      --hostname=NAME     set the hostname (default: `hostname`)
      --exim              don't reuse a socket for more than one query (exim compatible)
-     --whitelist-clients=FILE     default: /etc/postfix/postgrey_whitelist_clients
-     --whitelist-recipients=FILE  default: /etc/postfix/postgrey_whitelist_recipients
+     --whitelist-clients=FILE     default: /etc/postfix/postgrey_whitelist_clients
+     --whitelist-recipients=FILE  default: /etc/postfix/postgrey_whitelist_recipients
      --auto-whitelist-clients=N   whitelist host after first successful delivery
                                   N is the minimal count of mails before a client is 
                                   whitelisted (turned on by default with value 5)
@@ -839,7 +918,7 @@ B<postgrey> [I<options>...]
                                   default: X-Greylist: delayed <seconds> seconds by postgrey-<version> at <server>; <date>
 
  Note that the --whitelist-x options can be specified multiple times,
- and that per default /etc/postfix/postgrey_whitelist_clients.local is
+ and that per default /etc/postfix/postgrey_whitelist_clients.local is
  also read, so that you can put there local entries.
 
 =head1 DESCRIPTION
@@ -866,7 +945,7 @@ doing lookups in the database.
 =item *
 
 Create a C<postgrey> user and the directory where to put the database I<dbdir>
-(default: C</var/spool/postfix/postgrey>)
+(default: C</var/db/postgrey>)
 
 =item *
 
@@ -879,7 +958,7 @@ LSB-compliant init script by Adrian von 
 
 =item *
 
-Put something like this in /etc/main.cf:
+Put something like this in /etc/postfix/main.cf:
 
  smtpd_recipient_restrictions =
                permit_mynetworks
@@ -890,11 +969,11 @@ Put something like this in /etc/main.cf:
 =item *
 
 Install the provided postgrey_whitelist_clients and
-postgrey_whitelist_recipients in /etc/postfix.
+postgrey_whitelist_recipients in /etc/postfix.
 
 =item *
 
-Put in /etc/postfix/postgrey_whitelist_recipients users that do not want
+Put in /etc/postfix/postgrey_whitelist_recipients users that do not want
 greylisting.
 
 =back
@@ -905,9 +984,9 @@ Whitelists allow you to specify client a
 which no greylisting should be done. Per default postgrey will read the
 following files:
 
- /etc/postfix/postgrey_whitelist_clients
- /etc/postfix/postgrey_whitelist_clients.local
- /etc/postfix/postgrey_whitelist_recipients
+ /etc/postfix/postgrey_whitelist_clients
+ /etc/postfix/postgrey_whitelist_clients.local
+ /etc/postfix/postgrey_whitelist_recipients
 
 You can specify alternative paths with the --whitelist-x options.
 
