--- configure.orig	2024-10-10 18:19:24 UTC
+++ configure
@@ -129,7 +129,7 @@ INCCRYPTO=""
 IASL="iasl"
 XSLTPROC="xsltproc"
 INCCRYPTO=""
-LIBCRYPTO="-lssl -lcrypto"
+LIBCRYPTO="-lssl -lcrypto -lz"
 LIBPTHREAD="-lpthread"
 LIBCAP="-lcap"
 GSOAP=""
@@ -154,10 +154,14 @@ if [ "$OS" = "freebsd" ]; then
 if [ "$OS" = "freebsd" ]; then
   INCCURL="-I/usr/local/include"
   LIBCURL="-L/usr/local/lib -lcurl"
+  INCALSA="-I/usr/local/include"
+  LIBALSA="-L/usr/local/lib"
   INCPULSE="-I/usr/local/include"
   LIBPULSE="-L/usr/local/lib"
   INCPNG="-I/usr/local/include"
   LIBPNG="-L/usr/local/lib -lpng"
+  INCVNCSERVER="-I/usr/local/include"
+  LIBVNCSERVER="-L/usr/local/lib"
 else
   INCCURL=""
   LIBCURL="-lcurl"
@@ -1207,6 +1211,9 @@ extern "C" int main(int argc, char** argv)
   printf("found version %d.%d.%d",
          SDL_MAJOR_VERSION, SDL_MINOR_VERSION, SDL_PATCHLEVEL);
 #if SDL_VERSION_ATLEAST(1,2,7)
+#if !defined(SDL_VIDEO_DRIVER_X11)
+#error SDL must be compiled with X11 support
+#endif
   printf(", OK.\n");
   return 0;
 #else
@@ -1291,7 +1298,7 @@ EOF
 #endif
 }
 EOF
-  if test_compile "-lasound" asound asound; then
+  if test_compile "$INCALSA $LIBALSA -lasound" asound asound; then
     test_execute
   fi
 }
@@ -1582,6 +1589,7 @@ EOF
     # Add the necessary params for building the test application
     if [ -n "$PATH_SDK_QT5" ]; then
       if [ -f "$t/clang_64/lib/QtCore.framework/QtCore" ]; then
+        FLGQT5="$FLGQT5 -std=c++11"
         INCQT5=-I$PATH_SDK_QT5/clang_64/lib/QtCore.framework/Headers
         LIBQT5=-F$PATH_SDK_QT5/clang_64/lib
         SDKQT5=$PATH_SDK_QT5/clang_64
@@ -2036,7 +2044,7 @@ check_kbuild()
     fi
     echo "export KBUILD_PATH KBUILD_DEVTOOLS PATH" >> $ENV
     echo "unset path_kbuild_bin path_tools_bin" >> $ENV
-    KBUILD_SED="$KBUILDDIR_BIN/kmk_sed"
+    KBUILD_SED="/usr/local/bin/kmk_sed"
 
     echo '' >> $ENV
     echo "# Legacy - do not use:" >> $ENV
@@ -2173,7 +2181,7 @@ EOF
 }
 EOF
   found=
-  SUPPYTHONLIBS="python2.7 python2.6 python3.1 python3.2 python3.3 python3.4 python3.4m python3.5 python3.5m python3.6 python3.6m python3.7 python3.7m python3.8 python3.9 python3.10 python3.11 python3.12"
+  SUPPYTHONLIBS="python3.11"
   for p in $PYTHONDIR; do
     for d in $SUPPYTHONLIBS; do
       for b in lib/x86_64-linux-gnu lib/i386-linux-gnu lib64 lib/64 lib; do
@@ -3028,12 +3036,22 @@ if [ $ONLY_ADDITIONS -eq 0 ]; then
   [ $WITH_JAVA   -eq 1 ] && check_java
 
   # PulseAudio
-  if [ $WITH_PULSE -eq 1 ]; then
-    check_pulse
-  elif [ $WITH_PULSE -eq 0 ]; then # Force disabling PulseAudio.
-    cnf_append "VBOX_WITH_AUDIO_PULSE" ""
-  elif [ $WITH_PULSE -eq 2 ]; then # --enable-pulse was passed, force PulseAudio.
-    cnf_append "VBOX_WITH_AUDIO_PULSE" "1"
+  if [ "$OS" = "linux" -o "$OS" = "freebsd" -o "$OS" = "netbsd" ]; then
+    if [ $WITH_ALSA -eq 1 ]; then
+      check_alsa
+    else
+      cnf_append "VBOX_WITH_AUDIO_ALSA" ""
+    fi
+    if [ $WITH_PULSE -eq 1 ]; then
+      check_pulse
+    elif [ $WITH_PULSE -eq 0 ]; then # Force disabling PulseAudio.
+      cnf_append "VBOX_WITH_AUDIO_PULSE" ""
+    elif [ $WITH_PULSE -eq 2 ]; then # --enable-pulse was passed, force PulseAudio.
+      cnf_append "VBOX_WITH_AUDIO_PULSE" "1"
+    fi
+    if [ $WITH_DBUS -eq 0 ]; then
+      cnf_append "VBOX_WITH_DBUS" "" 
+    fi
   fi
 fi
 
@@ -3049,14 +3067,6 @@ if [ "$OS" = "linux" ]; then
     cnf_append "VBOX_WITHOUT_LINUX_TEST_BUILDS" "1"
   fi
   if [ $ONLY_ADDITIONS -eq 0 ]; then
-    if [ $WITH_ALSA -eq 1 ]; then
-      check_alsa
-    else
-      cnf_append "VBOX_WITH_AUDIO_ALSA" ""
-    fi
-    if [ $WITH_DBUS -eq 0 ]; then
-      cnf_append "VBOX_WITH_DBUS" ""
-    fi
     if [ $WITH_DEVMAPPER -eq 1 ]; then
       check_libdevmapper
     else
